//
//  PostDetailsInteractor.swift
//  Posts
//
//  Created by Santiago Pelaez Rua on 10/10/19.
//  Copyright (c) 2019 Santiago Pelaez Rua. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostDetailsBusinessLogic {
    func getPost(request: PostDetails.GetPost.Request)
    func toggleFavorite(request: PostDetails.ToggleFavorite.Request)
    func updatePostsList(request: PostDetails.UpdatePostsList.Request)
}

protocol PostDetailsDataStore {
    var post: Post! { get set }
    var user: User! { get set }
}

class PostDetailsInteractor: PostDetailsBusinessLogic, PostDetailsDataStore {
    var presenter: PostDetailsPresentationLogic?
    var worker: PostDetailsWorker?
    var post: Post! {
        didSet {
            post.isUnread = false
        }
    }
    var user: User!

    init() {
        worker = PostDetailsWorker()
    }

    // MARK: Get Post
    func getPost(request: PostDetails.GetPost.Request) {
        worker?.fetchUser(id: post.userId, completionHandler: { user in
            self.user = user
            let response = PostDetails.GetPost.Response(post: self.post, user: user)

            self.presenter?.presentPost(response: response)
        })
    }

    // MARK: Update Posts List
    func updatePostsList(request: PostDetails.UpdatePostsList.Request) {
        let response = PostDetails.UpdatePostsList.Response()

        presenter?.presentUpdatePostsList(response: response)
    }

    // MARK: Toggle favorite
    func toggleFavorite(request: PostDetails.ToggleFavorite.Request) {
        post.isFavorite = !post.isFavorite
        let response = PostDetails.ToggleFavorite.Response(post: post, user: user)

        self.presenter?.presentToggleFavorite(response: response)
    }
}
