//
//  PostsListPresenter.swift
//  Posts
//
//  Created by Santiago Pelaez Rua on 10/9/19.
//  Copyright (c) 2019 Santiago Pelaez Rua. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PostsListPresentationLogic {
    /**
     formats and asks viewController to display posts from a given response
     - parameter response: Response object containing posts data
     */
    func presentPosts(response: PostsList.FetchPosts.Response)
    func presentPosts(response: PostsList.DeletePosts.Response)
}

class PostsListPresenter: PostsListPresentationLogic {
    weak var viewController: PostsListDisplayLogic?
    private var posts: [PostsList.Post]!
    
    // MARK: Present posts
    func presentPosts(response: PostsList.FetchPosts.Response) {
        posts = PostsList.FetchPosts.ViewModel(posts: response.posts).posts
        markUnreadPosts()

        viewController?.displayPosts(viewModel: PostsList.FetchPosts.ViewModel(posts: posts))
    }

    func presentPosts(response: PostsList.DeletePosts.Response) {
        posts = PostsList.DeletePosts.ViewModel(posts: response.posts).posts
        markUnreadPosts()

        viewController?.displayPosts(viewModel: PostsList.DeletePosts.ViewModel(posts: posts))
    }

    /**
     marks the first 20 posts as unread
     */
    private func markUnreadPosts() {
        var counter = 0
        for i in 0..<posts.count {
            if counter < 20 {
                posts[i].isUnread = true
            }

            counter += 1
        }
    }
}
