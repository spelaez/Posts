//
//  PostDetailsPresenterTests.swift
//  Posts
//
//  Created by Santiago Pelaez Rua on 10/10/19.
//  Copyright (c) 2019 Santiago Pelaez Rua. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Posts
import XCTest

class PostDetailsPresenterTests: XCTestCase {
    // MARK: Subject under test
    var sut: PostDetailsPresenter!
    
    // MARK: Test lifecycle
    override func setUp() {
        super.setUp()
        setupPostDetailsPresenter()
    }
    
    // MARK: Test setup
    func setupPostDetailsPresenter() {
        sut = PostDetailsPresenter()
    }
    
    // MARK: Test doubles
    class PostDetailsDisplayLogicSpy: PostDetailsDisplayLogic {
        // MARK: method call expectations
        var displayPostCalled = false

        // MARK: argument expectations
        var getPostViewModel: PostDetails.GetPost.ViewModel!

        func displayPost(viewModel: PostDetails.GetPost.ViewModel) {
            displayPostCalled = true
            getPostViewModel = viewModel
        }
    }
    
    // MARK: Tests
    func testPresenterShouldAskViewControllerToDisplayPost() {
        // Given
        let displayLogicSpy = PostDetailsDisplayLogicSpy()

        sut.viewController = displayLogicSpy

        // When
        let post = Post(userId: 1, id: 1, title: "", body: "post body")
        let response = PostDetails.GetPost.Response(post: post)

        sut.presentPost(response: response)

        // Then
        XCTAssertTrue(displayLogicSpy.displayPostCalled, "presenter should call display post on viewController")
        XCTAssertEqual(displayLogicSpy.getPostViewModel.displayedPost.body, post.body, "presenter should send the same post body to viewController in response")
    }
}
